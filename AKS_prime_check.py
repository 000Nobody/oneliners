AKS=(lambda n,m=__import__("math"):True if n==2 else False if n%2==0 else False if any(any(i**k==n for k in range(2,m.ceil(m.log(n,i))+1))for i in range(2,m.ceil(m.log2(n))+1))else(lambda r=(lambda l=m.log2(n):(lambda p=m.floor(l*l),q=max(3,m.ceil(l**5)):(lambda f:lambda*x:f(f,*x))((lambda f,r=1,x=True:r-1 if not(x and r<q)else f(f,r+1,any(pow(n,k,r)in(0,1)for k in range(1,p)))))())())():True if n<=r else False if any(m.gcd(a,n)!=1 for a in range(1,r+1))else(lambda b=m.floor(m.sqrt(sum(m.gcd(i,r)==1 for i in range(1,r)))*m.log2(n)):not any(pow(a,n,n)-a!=0 for a in range(1,b+1)))())())